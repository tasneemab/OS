{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf100
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgray\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww33400\viewh21000\viewkind0
\deftab890
\pard\tx890\pardeftab890\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 /**
\f1 \

\f0  * Pure C 2019.
\f1 \

\f0  * File: ex3a.
\f1 \

\f0  *
\f1 \

\f0  * Authors: Tasneem Abu Odeh & Anwar Hamdan.
\f1 \

\f0  * id: 314902685, 319109609
\f1 \

\f0  ';.
\f1 \

\f0  * login: tasnimab + anwarha.
\f1 \

\f0  *
\f1 \

\f0  * A program that solves tower Hanoi by creating 5 children using fork, every
\f1 \

\f0  * single child solves one Hanois tower problem, then creates a file and write the
\f1 \

\f0  * solutions on it.
\f1 \

\f0  *
\f1 \

\f0  * It also gives as a stander output every Hanoi's tower and the time it takes to
\f1 \

\f0  * be solved.
\f1 \

\f0  *
\f1 \

\f0  *
\f1 \

\f0  *
\f1 \

\f0  * Input: Nothing.
\f1 \

\f0  * output: each tower = time of the process.
\f1 \

\f0  *
\f1 \

\f0  * Compile: gcc -Wall ex3a.c \'96o ex3a.
\f1 \

\f0  * Run: ex3a.
\f1 \

\f0  * RunTime: O(n^2), while n is the input size.
\f1 \

\f0  *
\f1 \

\f0  */\
//\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
/**
\f1 \

\f0  * Pure C 2019.
\f1 \

\f0  * File: ex3b.
\f1 \

\f0  *
\f1 \

\f0  * Authors: Tasneem Abu Odeh & Anwar Hamdan.
\f1 \

\f0  * id: 314902685, 319109609
\f1 \

\f0  * login: tasnimab + anwarha.
\f1 \

\f0  *
\f1 \

\f0  * A program that build an array that has 500 cells, fill it with random
\f1 \

\f0  * numbers between 0 and 100, then it sorts the array using quick sort and
\f1 \

\f0  * merge sort. After all it prints  out the values (sorted).
\f1 \

\f0  *
\f1 \

\f0  *
\f1 \

\f0  *
\f1 \

\f0  * Input: Nothing.
\f1 \

\f0  * output: Sorted array that has 500 values between 0 and 1000 .
\f1 \

\f0  *
\f1 \

\f0  * Compile: gcc -Wall ex3b.c \'96o ex3b.
\f1 \

\f0  * Run: ex3b.
\f1 \

\f0  * RunTime: O(n^2), while n is the input size.
\f1 \

\f0  *
\f1 \

\f0  */}